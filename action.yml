inputs:
  new_project_options:
    required: true
  variant:
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Elixir Dependencies 
      run: mix deps.get
      shell: bash
    
    - name: Install Phoenix
      run: make install_phoenix PHOENIX_VERSION=${{ env.PHOENIX_VERSION }}
      shell: bash
    
      # Y - in response to Fetch and install dependencies?
    - name: Create Phoenix project
      run: printf "Y\n" | make create_phoenix_project PROJECT_DIRECTORY=sample_project OPTIONS="${{ inputs.new_project_options }}"
      shell: bash
    
    - name: Apply Phoenix template
      run: make apply_phoenix_template PROJECT_DIRECTORY=sample_project VARIANT=${{ inputs.variant }}
      shell: bash

    - name: Install Elixir Dependencies
      run: cd sample_project && mix deps.get
      shell: bash

    - name: Compile dependencies
      run: cd sample_project && mix compile --warnings-as-errors --all-warnings
      shell: bash
      env:
        MIX_ENV: test
      
    - name: Install Node Dependencies
      run: cd sample_project && npm install --prefix assets
      shell: bash

    - name: Run mix ecto.create
      run: cd sample_project && mix ecto.create
      shell: bash
      env:
        MIX_ENV: test
        DB_HOST: localhost
    
    - name: Run mix ecto.migrate
      run: cd sample_project && mix ecto.migrate
      shell: bash
      env:
        MIX_ENV: test
        DB_HOST: localhost
    
    - name: Run mix codebase
      run: cd sample_project && mix codebase
      shell: bash
      env:
        MIX_ENV: test
        DB_HOST: localhost

    - name: Run mix test
      run: cd sample_project && mix coverage
      shell: bash
      env:
        MIX_ENV: test
        DB_HOST: localhost
    
    - name: Remove nimble_template
      run: make remove_nimble_template PROJECT_DIRECTORY=sample_project
      shell: bash
      
    - name: Build release app
      run: cd sample_project && docker-compose build
      shell: bash
        
    - run: rm -rf sample_project
      shell: bash
